from random import randint
class user
    __init__(self, username, password, games, balance)
        self.username
        self.password
        self.games = []
        self.balance = 0.0

    def save_user(self, username, password, games, balance)
        with open('users.txt', 'w') as file
            for i in range(len(user_list))
                file.write(user_list[i.].username,
                            user_list[i].password,
                            user_list[i].games,
                            user_list[i].balance)

    def view_bal(self, balance)
        return balance

    def deposit(self, amount)
        self.balance += amount

    def withdraw(self, amount)
        if balance >= amount
            self.balance -= amount
            return amount
        else
            return "Insufficient funds"

    def add_game(self, game)
        self.games = []
        self.games.append(game_list[game])
        game_list[game].purchase()


make_userlist()
    user_list = {}
    with open('users.txt', 'r') as user_file
    for lines in user_file
        line = user_file.readline()
        username, password, games, balance = line.strip().split(',')
        old_user = user(username, password, games, balance)
        user_list[username] = old_user
    return user_list

make_user()
    make_userlist()
    user_exist = True
    while user_exist True
        input username
        input password
        if username in user_list
            print('This user already exists')
        else
            user_exist = False
    new_user = user(username, password)
    user_list[username] = new_user
    return user_list, username

validate_user()
    ask if new user (y/n)
    if new user is n
        user_list = make_userlist() 
        username = input("Enter Username:").lower
        password = input("Enter Password:").lower
        if user_list[username].password == password
                return True
        else return False
    elif new user is n
         username = make_user()
        return True, username

purchase_game(username)
    game_key = input ("Enter the purchase key for the game you wish to buy")
    withdrawal = withdraw(game_list[game_key].price)
        if withdrawal == game_list[game_key].price and gamelist[game_key].purchase() != 'Insufficient Stock'
            print(f'you have purchased {game_list[game_key].title} for ${withdrawal}')
            user_list[username].add_game(game_key)
            gamelist[game_key].purchase()
        
